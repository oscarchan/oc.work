//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.05.24 at 02:38:28 PM PDT 
//


package sandbox.liquibase.xml;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;group ref="{http://www.liquibase.org/xml/ns/dbchangelog/1.9}PreConditionChildren" maxOccurs="unbounded"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "preConditionChildren"
})
@XmlRootElement(name = "and")
public class And {

    @XmlElements({
        @XmlElement(name = "columnExists", type = ColumnExists.class),
        @XmlElement(name = "not", type = Not.class),
        @XmlElement(name = "customPrecondition", type = CustomPrecondition.class),
        @XmlElement(name = "sqlCheck", type = SqlCheck.class),
        @XmlElement(name = "or", type = Or.class),
        @XmlElement(name = "dbms", type = Dbms.class),
        @XmlElement(name = "changeSetExecuted", type = ChangeSetExecuted.class),
        @XmlElement(name = "viewExists", type = ViewExists.class),
        @XmlElement(name = "runningAs", type = RunningAs.class),
        @XmlElement(name = "foreignKeyConstraintExists", type = ForeignKeyConstraintExists.class),
        @XmlElement(name = "tableExists", type = TableExists.class),
        @XmlElement(name = "primaryKeyExists", type = PrimaryKeyExists.class),
        @XmlElement(name = "indexExists", type = IndexExists.class),
        @XmlElement(name = "and", type = And.class),
        @XmlElement(name = "sequenceExists", type = SequenceExists.class)
    })
    protected List<Object> preConditionChildren;

    /**
     * Gets the value of the preConditionChildren property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the preConditionChildren property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPreConditionChildren().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ColumnExists }
     * {@link Not }
     * {@link CustomPrecondition }
     * {@link SqlCheck }
     * {@link Or }
     * {@link Dbms }
     * {@link ChangeSetExecuted }
     * {@link ViewExists }
     * {@link RunningAs }
     * {@link ForeignKeyConstraintExists }
     * {@link TableExists }
     * {@link PrimaryKeyExists }
     * {@link IndexExists }
     * {@link And }
     * {@link SequenceExists }
     * 
     * 
     */
    public List<Object> getPreConditionChildren() {
        if (preConditionChildren == null) {
            preConditionChildren = new ArrayList<Object>();
        }
        return this.preConditionChildren;
    }

}
